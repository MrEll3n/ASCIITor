'''
        while describing:
                if int(key) in NUMBERS:  # If the pressed key is a number
                    for index, item in enumerate(p.inv_lst, start=1):  # list through items in inventory
                        if index == int(key):  # if index of item is equal to the pressed key
                            describing = False
                            infomenu.restore_info()
                            infomenu.clear_buffer()
                            if infomenu.info_array[0] != '-----------------------------------------------------------------------':
                                infomenu.print_info(
                                    f'-----------------------------------------------------------------------')
                            match item[0].__class__.__name__:  # getting class name of the object
                                case "Armor":
                                    infomenu.print_info(f'„{item[0].desc}“')
                                    infomenu.print_info(f'Def: {item[0].defense}')
                                    infomenu.print_info(f'{item[0].name} ({item[0].lvl})')
                                    infomenu.print_info(
                                        f'-----------------------------------------------------------------------')
                                case "Weapon":
                                    infomenu.print_info(f'„{item[0].desc}“')
                                    infomenu.print_info(f'Dmg: {item[0].dmg}')
                                    infomenu.print_info(f'{item[0].name} ({item[0].lvl})')
                                    infomenu.print_info(
                                        f'-----------------------------------------------------------------------')
                                case "Food":
                                    infomenu.print_info(f'„{item[0].desc}“')
                                    infomenu.print_info(f'Reg: {item[0].reg}')
                                    infomenu.print_info(f'{item[0].name}')
                                    infomenu.print_info(
                                        f'-----------------------------------------------------------------------')

                        else:
                            describing = False
                            infomenu.restore_info()
                            infomenu.clear_buffer()
                            infomenu.print_info("That is not a number")

            if item_deletion:
                if int(key) in NUMBERS:  # If the pressed key is a number
                    for index, item in enumerate(p.inv_lst, start=1):  # list through items in inventory
                        if index == int(key):  # if index of item is equal to the pressed key
                            infomenu.delete_info()
                            infomenu.print_info("y/n")
                            infomenu.print_info(f'Do you want to delete {item[0].name}?')


                            infomenu.restore_info()
                            infomenu.clear_buffer()


                        else:
                            item_deletion = False
                            infomenu.restore_info()
                            infomenu.clear_buffer()
                            infomenu.print_info("That is not a number")

            elif key == "KEY_LEFT":
                move_cam = p.move_left(map)
                if not p.can_left(map):
                    infomenu.print_info("*You hit the wall*")
                # Debuging:
                else:
                    pass
                    # infomenu.print_info("*You moved left*")
                # end
                if not p.x >= GAME_X - (CAM_WIDTH // 2) - 1 and CAM_X > 0 and move_cam:
                    CAM_X -= 1


            elif key == "KEY_RIGHT":
                move_cam = p.move_right(map, GAME_X)
                if not p.can_right(map, GAME_X):
                    infomenu.print_info(f"*You hit the wall*")
                # Debuging:
                else:
                    pass
                    # infomenu.print_info(f"*You moved right*")
                # end
                if p.x > CAM_WIDTH // 2 and move_cam and CAM_X <= GAME_X - CAM_WIDTH - 2:
                    CAM_X += 1


            elif key == "KEY_UP":
                move_cam = p.move_up(map)
                if not p.can_up(map):
                    infomenu.print_info(f"*You hit the wall*")
                # Debuging:
                else:
                    pass
                    # infomenu.print_info(f"*You moved up*")
                # end
                if not p.y >= GAME_Y - (CAM_HEIGHT // 2) - 1 and CAM_Y > 0 and move_cam:
                    CAM_Y -= 1


            elif key == "KEY_DOWN":
                move_cam = p.move_down(map, GAME_Y)
                if not p.can_down(map, GAME_Y):
                    infomenu.print_info(f"*You hit the wall*")
            # Debuging:
                else:
                    pass
                    # infomenu.print_info(f"*You moved down*")
            # end
                if p.y > CAM_HEIGHT // 2 and move_cam and CAM_Y <= GAME_Y - CAM_HEIGHT - 1:
                    CAM_Y += 1


            elif key == "g":
                match p.pickup_item(map, items_world, 0, 0):
                    case "yes":
                        inv.print_inv(p)
                        infomenu.print_info(f"You picked up {p.inv_lst[0][0].name}")
                    case "overcarried":
                        infomenu.print_info(f"You're overloaded!")
                    case "no_item":
                        infomenu.print_info(f"There is no item under you!")
                    case "working":
                        infomenu.print_info(f"Working!!")
                    case "error":
                        infomenu.print_info(f"Error!!")

            elif key == "i":
                if len(p.inv_lst) > 0:
                    describing = True

                    infomenu.clear_window()

                    infomenu.fill_buffer()
                    infomenu.delete_info()
                    infomenu.print_info(f"Choose 1) - {len(p.inv_lst)}) for describing:")

                    # infomenu.print_info(f"Ahoj {p.inv_lst[select - 1][0].desc}")
                else:
                    infomenu.print_info(f"You have no items to describe!")
                    # infomenu.info_array = info_array_buffer.copy()

            elif key == "d":
                if len(p.inv_lst) > 0:
                    item_deletion = True

                    infomenu.clear_window()

                    infomenu.fill_buffer()
                    infomenu.delete_info()
                    infomenu.print_info(f"Choose 1) - {len(p.inv_lst)}) to delete an item:")

                    # infomenu.print_info(f"Ahoj {p.inv_lst[select - 1][0].desc}")
                else:
                    infomenu.print_info(f"You have no items to delete!")
                    # infomenu.info_array = info_array_buffer.copy()






    '''